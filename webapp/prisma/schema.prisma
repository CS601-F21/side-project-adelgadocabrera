// This is your Prisma schema file, ðŸ“‚
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// TODO: add badge entity
// TODO: add badges to posts and to users

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Post {
  id          Int          @id @default(autoincrement())
  title       String
  content     String
  gist        String?
  author      User         @relation(fields: [authorId], references: [id])
  authorId    Int
  isOpen      Boolean
  likes       Int
  views       Int
  createdAt   DateTime
  updatedAt   DateTime
  badges      Badge[]
  codereviews CodeReview[]
}

model User {
  id           Int          @id @default(autoincrement())
  username     String
  email        String       @unique
  quote        String
  createdAt    DateTime     @default(now()) @map(name: "created_at")
  updatedAt    DateTime     @updatedAt @map(name: "updated_at")
  isStudent    Boolean
  isWorker     Boolean
  company      String
  studentYears Int
  workYears    Int
  posts        Post[]
  comments     Comment[]
  CodeReview   CodeReview[]
  badges       Badge[]

  @@map(name: "users")
}

model CodeReview {
  id        Int       @id @default(autoincrement())
  author    User?     @relation(fields: [authorId], references: [id])
  authorId  Int?
  content   String
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")
  comments  Comment[]
  likes     Int
  post      Post      @relation(fields: [postId], references: [id])
  postId    Int

  @@map(name: "codereviews")
}

model Comment {
  id           Int        @id @default(autoincrement())
  content      String
  createdAt    DateTime   @default(now()) @map(name: "created_at")
  updatedAt    DateTime   @updatedAt @map(name: "updated_at")
  likes        Int
  author       User       @relation(fields: [authorId], references: [id])
  authorId     Int
  codeReview   CodeReview @relation(fields: [codeReviewId], references: [id])
  codeReviewId Int

  @@map(name: "comments")
}

model Badge {
  id     Int    @id @default(autoincrement())
  name   String
  years  Int?
  Post   Post?  @relation(fields: [postId], references: [id])
  postId Int?
  User   User?  @relation(fields: [userId], references: [id])
  userId Int?

  @@map(name: "badges")
}
